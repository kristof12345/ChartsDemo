@namespace Common.Web
@using Syncfusion.Blazor.Charts;

@if (IsShown)
{
    <div style=@($"height: 550px; width: 100%")>
        <SfChart Height="500px">
            <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" Visible="true" LabelIntersectAction="LabelIntersectAction.Hide">
                <ChartAxisMajorGridLines Width="1" Color="transparent" />
            </ChartPrimaryXAxis>
            <ChartPrimaryYAxis LabelFormat=@("{value}%") Minimum="50" Maximum="150">
                <ChartAxisMajorGridLines Width="1" Color="#808080" />
            </ChartPrimaryYAxis>
            <ChartSeriesCollection>
                <ChartSeries DataSource=@Prices XName="Id" YName="Data" Width="3" Type=@ChartSeriesType.Line />
                <ChartSeries DataSource=@AveragePrices XName="Id" YName="Data" Width="3" Type=@ChartSeriesType.Line />
            </ChartSeriesCollection>
        </SfChart>
    </div>
}
else
{
    <Button OnClick=@Show Outlined="true">Generate comparisons</Button>
}

@code
{
    [Parameter]
    public IEnumerable<StockPrice> Data { get; set; } = new List<StockPrice>();

    [Parameter]
    public string Industry { get; set; }

    private IEnumerable<ChartData> Prices { get; set; }

    private IEnumerable<ChartData> AveragePrices { get; set; }

    private bool IsShown { get; set; }

    private async Task Show()
    {
        var baseline = Data.First().Close / 100;
        Prices = Data.Select(p => new ChartData { Id = p.Date.ToString(), Data = decimal.ToInt32(p.Close) }).ToList();
        AveragePrices = Data.Select(p => new ChartData { Id = p.Date.ToString(), Data = decimal.ToInt32(p.Close) }).ToList();
        IsShown = true;
    }
}
